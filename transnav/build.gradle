apply plugin: 'com.android.application'

android {
    signingConfigs {
        version {
            keyAlias 'enav'
            keyPassword 'tcup#2019'
            storeFile file('enav.jks')
            storePassword 'tcup#2019'
        }
    }
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion = rootProject.ext.android["buildToolsVersion"]

    useLibrary 'org.apache.http.legacy'

    compileOptions {
        targetCompatibility rootProject.ext.android["javaVersion"]
        sourceCompatibility rootProject.ext.android["javaVersion"]
    }

    defaultConfig {
        applicationId "com.tcup.transformer.transnav"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        multiDexEnabled true

        ndk { abiFilters "armeabi", "armeabi-v7a" }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.version
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            signingConfig signingConfigs.version
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'me.jessyan:arms:2.5.0'

    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["cardview-v7"]
    implementation rootProject.ext.dependencies["recyclerview-v7"]
    implementation rootProject.ext.dependencies["support-v4"]
    //view
    implementation rootProject.ext.dependencies["autosize"]
    annotationProcessor(rootProject.ext.dependencies["butterknife-compiler"]) {
        exclude module: 'support-annotations'
    }

    //navi-3dmap
    implementation rootProject.ext.dependencies["navi-3dmap"]
    implementation rootProject.ext.dependencies["location"]
    implementation rootProject.ext.dependencies["search"]

    //tools
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    implementation rootProject.ext.dependencies["progressmanager"]
    implementation rootProject.ext.dependencies["retrofit-url-manager"]
    implementation rootProject.ext.dependencies["lifecyclemodel"]

    //注意 Arms 核心库现在并不会依赖某个 EventBus, 要想使用 EventBus, 还请在项目中自行依赖对应的 EventBus
    //现在支持两种 EventBus, greenrobot 的 EventBus 和畅销书 《Android源码设计模式解析与实战》的作者 何红辉 所作的 AndroidEventBus
    //依赖后 Arms 会自动检测您依赖的 EventBus 并自动注册
    //建议使用 AndroidEventBus, 特别是组件化项目, 原因请看 https://github.com/hehonghui/AndroidEventBus/issues/49
    //这种做法可以让使用者有自行选择三方库的权利, 并且还可以减轻 Arms 的体积
//    implementation rootProject.ext.dependencies["androideventbus"]
    implementation rootProject.ext.dependencies["eventbus"]
    implementation 'me.jessyan:arms-imageloader-glide:2.5.0'
    implementation rootProject.ext.dependencies["paginate"]

    implementation rootProject.ext.dependencies["multidex"]
    implementation rootProject.ext.dependencies["baseAdapter"]
    //test
}
